{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Python: EEG Utils",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/src/eeg/utils.py",
      "args": [
        "--input_directory",
        "data/crown/sessions",
        "--find_latest_timestamp",
      ]
    },
    {
      "name": "Python: Validate Numpy Arrays",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/src/eeg/validate.py",
      "args": [
        "--path",
        "data/npy_tuh_eeg",
        "--parallel"
      ]
    },
    {
      "name": "Python: TUH EEG DEBUG",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/src/eeg/preprocess.py",
      "args": [
        "--input_directory",
        "data/tuh_eeg",
        "--output_directory",
        "data/npy_tuh_eeg_test",
        "--notch_filter",
        "50",
        "60",
        "--bandpass_filter",
        "1",
        "48",
        "--tuh_eeg",
        "--verbose"
      ],
      "preLaunchTask": "remove-test-directory"
    },
    {
      "name": "Python: TUH EEG Prod",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/src/eeg/preprocess.py",
      "args": [
        "--input_directory",
        "data/tuh_eeg",
        "--output_directory",
        "data/npy_tuh_eeg",
        "--notch_filter",
        "50",
        "60",
        "--bandpass_filter",
        "1",
        "48",
        "--tuh_eeg",
        "--verbose",
        "--parallel"
      ]
    },
    {
      "name": "Python: TUH EEG Abnormal Prod",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/src/eeg/preprocess.py",
      "args": [
        "--input_directory",
        "data/tuh/eeg_abnormal",
        "--output_directory",
        "data/pt_tuh_eeg_abnormal",
        "--notch_filter",
        "50",
        "60",
        "--bandpass_filter",
        "1",
        "48",
        "--tuh_eeg",
        "--verbose"
      ]
    },
    {
      "name": "Python: EEG DSP Crown Dev",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/src/eeg/preprocess.py",
      "args": [
        "--input_directory",
        "data/crown/sessions_fast",
        "--output_directory",
        "data/crown/pt_sessions_fast",
        "--recording_sample_rate",
        "256",
        "--notch_filter",
        "50",
        "60",
        "--bandpass_filter",
        "1",
        "48",
        "--channel_locations",
        "CP3, C3, F5, PO3, PO4, F6, C4, CP4",
        "--verbose"
      ],
      "preLaunchTask": "remove-dev-crown-directory"
    },
    {
      "name": "Python: EEG DSP Crown Prod",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/src/eeg/preprocess.py",
      "args": [
        "--input_directory",
        "data/crown/sessions_exported_on_2024_02_08",
        "--output_directory",
        "data/crown/pt_sessions",
        "--recording_sample_rate",
        "256",
        "--notch_filter",
        "50",
        "60",
        "--bandpass_filter",
        "1",
        "48",
        "--channel_locations",
        "CP3, C3, F5, PO3, PO4, F6, C4, CP4",
        "--verbose"
      ]
      // "preLaunchTask": "remove-prod-crown-directory"
    },
    {
      "name": "Python: EEG Other",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/src/eeg/preprocess.py",
      "args": [
        "--input_directory",
        "data/other",
        "--output_directory",
        "data/pt_other",
        "--notch_filter",
        "50",
        "60",
        "--bandpass_filter",
        "1",
        "48",
        "--tuh_eeg",
        "--verbose"
      ]
    },
    {
      "name": "Python: Train GPT Model",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/src/train_gpt.py",
      "args": [
        "--training-steps=50000",
        "--eval_every_n_steps=100",
        "--log-every-n-steps=10",
        "--per-device-training-batch-size=32",
        "--per-device-validation-batch-size=32",
        "--num-workers=24",
        "--num_chunks=32",
        "--chunk_len=500",
        "--chunk_ovlp=50",
        "--num-hidden-layers=6",
        "--num-encoder-layers=6",
        "--run-name=32clen2_embed1024",
        "--training-style=CSM_causal",
        "--embedding-dim=1024",
        "--train-data-path=data/npy_tuh_eeg",
        "--verbose=True"
      ],
      "console": "integratedTerminal"
    },
    {
      "name": "Python: Train GPT Model (Multi-GPU)",
      "type": "python",
      "request": "launch",
      "module": "torch.distributed.launch",
      "args": [
        "--nproc_per_node=2", // Use 2 GPUs, adjust as needed
        "${workspaceFolder}/src/train_gpt.py",
        "--training-steps=50000",
        "--eval_every_n_steps=100",
        "--log-every-n-steps=1",
        "--per-device-training-batch-size=32",
        "--per-device-validation-batch-size=32",
        "--num-workers=16",
        "--num_chunks=32",
        "--chunk_len=500",
        "--chunk_ovlp=50",
        "--num-hidden-layers=6",
        "--num-encoder-layers=6",
        "--run-name=32clen2_embed1024_multi_gpu",
        "--training-style=CSM_causal",
        "--embedding-dim=1024",
        "--train-data-path=data/npy_tuh_eeg",
        "--verbose=True"
      ],
      "console": "integratedTerminal"
    },
    {
      "name": "Python: Train GPT Model (Decoding)",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/src/train_gpt.py",
      "args": [
        "--training-steps=50000",
        "--eval_every_n_steps=1",
        "--log-every-n-steps=1",
        "--per-device-training-batch-size=32",
        "--per-device-validation-batch-size=32",
        "--num-workers=24",
        "--num_chunks=32",
        "--chunk_len=500",
        "--chunk_ovlp=50",
        "--num-hidden-layers=6",
        "--num-encoder-layers=6",
        "--run-name=decoder_bci2a_32clen2_embed1024",
        "--learning-rate=1e-4",
        "--use-encoder=True",
        "--training-style=decoding",
        "--num-decoding-classes=4",
        // "--ft-only-encoder=True",
        "--embedding-dim=1024",
        "--train-data-path=data/npy_tuh_eeg",
        "--dst-data-path=data/bciiv2a_eeg_npz",
        "--dst-data-channel-count=22",
        "--verbose=True"
      ],
      "console": "integratedTerminal"
    },
    {
      "name": "Python: Test GPT Model",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/src/test_gpt.py",
      "args": [
        "--training-steps=50000",
        "--eval_every_n_steps=1000",
        "--log-every-n-steps=1",
        "--per-device-training-batch-size=32",
        "--per-device-validation-batch-size=32",
        "--num-workers=16",
        "--num_chunks=32",
        "--chunk_len=500",
        "--chunk_ovlp=50",
        "--num-hidden-layers=6",
        "--num-encoder-layers=6",
        "--run-name=32clen2_embed1024",
        "--training-style=CSM_causal",
        "--embedding-dim=1024",
        "--train-data-path=data/npy_tuh_eeg",
        "--verbose=True"
      ],
      "console": "integratedTerminal"
    }
  ]
}